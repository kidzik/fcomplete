% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fregression.R
\name{fregression}
\alias{fregression}
\title{Approximate low-rank processes from sparse longitudinal observations}
\usage{
fregression(
  formula,
  data,
  covariates = NULL,
  bins = 51,
  method = c("fimpute", "fpcs", "mean"),
  lambda = c(0),
  maxIter = 1e+05,
  lambda.reg = 0,
  d = 7,
  K = NULL,
  K.reg = NULL,
  thresh = 1e-05,
  final = "soft",
  fold = 5,
  cv.ratio = 0.05,
  projection = "separate",
  verbose = 0,
  scale.covariates = TRUE,
  basis.type = "splines"
)
}
\arguments{
\item{formula}{formula describing the linear relation between processes and indicating time and grouping variables. See details}

\item{data}{data in the long format. Use \code{\link{fc.long2wide}} and \code{\link{fc.wide2long}} for conversions}

\item{bins}{number of bins for matrix representation of the data}

\item{method}{method for functional impute: \code{fpca} for functional principal components,
\code{mean} for mean impute and \code{fimpute} for functional impute}

\item{lambda}{lambdas for SVD regularization in functional impute}

\item{lambda.reg}{lambdas for SVD regularization in regression}

\item{d}{dimensionality of the basis}

\item{K}{upper bound of dimensionality for SVD regularization}

\item{K.reg}{upper bound of dimensionality for regression}

\item{thresh}{thershold for convergence in functional imputee}

\item{final}{should the final model use \code{"hard"} or \code{"soft"} impute after choosing the optimal \code{lambda}}

\item{fold}{how many folds in cross-validation}

\item{projection}{"joint" or "separate" (default). If multiple regressors are available project them jointly or separately}
}
\value{
Returns a list
\itemize{
\item \code{fit} fitted matrix \code{Y}
\item \code{meta} results of cross-validation
\item \code{u,d,v} svd of the underlying processes if the functional impute method has been chosen
}

In case of multidimensional SVD and simultanious approximation of \code{Y,X1,X2,...,Xp}, \code{$fit} is a list of models for \code{Y,X1,X2,...,Xp}.
}
\description{
Method approximates a process from sparse observations. Suppose, that for a certain subject one or multiple observations
are measured at some irregular timepoints. We assume that these are noise observations of some underlying process and we want
to approximate this process for each individual.
}
\details{
For a subject \eqn{i}, we observe \eqn{Y^{i}(t),X_1^{i}(t),...,X_p^{i}(t)} at irregular subject specific \eqn{t \in t_1,...,t_p}, where \eqn{0 < t_j < T}.
We can bin the time interval \eqn{[0,T]} and represent each individual as a vector of fixed length with missing values.
Let \code{Y, X1, ..., Xp} be such matrices. Columns correspond to timepoints and rows to subjects.

There are mulitple methods of approximating the process \code{Y}, we can:
\itemize{
\item regress \code{Y} on \code{X_1,X_2,...,X_p}, we can use sparse functional regression
\item project each subject into latent space and impute \code{Y, X_1,X_2,...,X_p} simultaniously
\item use only information from \code{Y}, we can use functional PCA method or functional impute.
}

Function \code{fregression} enables all three scenarios. Suppose \code{data} contains information in the long format, i.e. \code{data} is a
matrix with \eqn{p + 3} columns, where \code{data[,1]} is a \code{subjectID}, \code{data[,2]} is \code{time},  \code{data[,3]} is a value observation of \code{Y}
and remaining columns are covariates \code{X1, ..., Xp}. Each row corresponds to one observation for one subject.

There are three possible \code{formula}s:
\itemize{
\item \code{Y ~ time + X1 + X2 | subjectID} executes functional regression
\item \code{Y + X1 + X2 ~ time | subjectID} executes dimensionality reduction
\item \code{Y ~ time | subjectID} executes functional impute or functional PCA depending on the choice of \code{method} parameter
}
}
\examples{
# SIMULATE DATA
simulation = fsimulate(seed = 1)
data = simulation$data
ftrue = simulation$ftrue
K = simulation$params$K

model.mean = fregression(Y ~ time | id, data,
                         method = "mean")
model.fpca = fregression(Y ~ time | id, data,
                         lambda = 0, K = c(3,4,5), thresh = 1e-7, method = "fpcs")

lambdas = c(2,3,4,5,6,8,10,12,15,20)
model.fimp = fregression(Y ~ time | id, data,
                         lambda = lambdas, thresh = 1e-5, final = "hard")
model.fcmp = fregression(Y + X1 + X2 ~ time | id, data, covariates,
                         lambda = lambdas, K = K, final = "hard")
model.freg = fregression(Y ~ U1 + U2 + time | id, data, model.fcmp$u,
                         lambda = lambdas, thresh = 1e-5,
                         lambda.reg = 0.1, method = "fpcs", K = K)
}
\references{
James, Gareth M., Trevor J. Hastie, and Catherine A. Sugar.
\emph{Principal component models for sparse functional data.}
Biometrika 87.3 (2000): 587-602.
}
